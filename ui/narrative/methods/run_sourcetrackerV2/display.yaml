#
# define display information
#
name: SourceTracker

tooltip: |
    find source proportions of sink amplicon samples
screenshots: []

icon: icon.png

#
# define a set of similar apps that might be useful to the user
#
suggestions:
    apps:
        related:
            [app1, app2]
        next:
            [app3, app4]

#
# Configure the display and description of parameters
#
parameters :
    amplicon_matrix_ref :
        ui-name : |
            AmpliconMatrix
        short-hint : |
            AmpliconMatrix with raw count data
        long-hint  : |
            AmpliconMatrix with raw count data
    attribute_mapping_obj_ref:
        ui-name: |
            AttributeMapping Object
        short-hint: |
            Select associated KBaseExperiments.AttributeMapping object
        long-hint: |
            Select associated KBaseExperiments.AttributeMapping object
    sample_type:
        ui-name: |
            Sink/Sample Identification
        short-hint: |
            Select which row in the meatdata table holds the sink or source identification
    sink_label:
        ui-name: |
            Sink Label
        short-hint: |
            Label used to identify which samples are sink samples.
        long-hint: |
            Label used to identify which samples are sink samples.
    source_label:
        ui-name: |
            Source Label
        short-hint: |
            Label used to identify which samples are source samples.
        long-hint: |
            Label used to identify which samples are source samples.
    alpha1:
        ui-name: |
            Alpha1
        short-hint: |
            Prior counts of each feature in the training environments.
        long-hint: |
            Prior counts of each feature in the training environments. Higher
            values decrease the trust in the training environments, and make
            the source environment distributions over taxa smoother. A value of
            0.001 indicates reasonably high trust in all source environments, even
            those with few training sequences. A more conservative value would be
            0.01.
    alpha2:
        ui-name: |
            Alpha2
        short-hint: |
            Prior counts of each feature in the Unknown environment.
        long-hint: |
            Prior counts of each feature in the Unknown environment. Higher
            values make the Unknown environment smoother and less prone to
            overfitting given a training sample.
    beta:
        ui-name: |
            Beta
        short-hint: |
            Number of prior counts of test sequences from each feature in each
            environment.
        long-hint: |
            Number of prior counts of test sequences from each feature in each
            environment.
    restarts:
        ui-name: |
            Restarts
        short-hint: |
            Number of independent Markov chains to grow.
        long-hint: |
            Number of independent Markov chains to grow. `draws_per_restart` *
            `restarts` gives the number of samplings of the mixing proportions that
            will be generated.
    draws_per_restart:
        ui-name: |
            Draws per Restart
        short-hint: |
            Number of times to sample the state of the Markov chain for each
            independent chain grown.
        long-hint: |
            Number of times to sample the state of the Markov chain for each
            independent chain grown.
    burnin:
        ui-name: |
            Burn-in
        short-hint: |
            Number of passes (withdarawal and reassignment of every sequence in the
            sink) that will be made before a sample (draw) will be taken. Higher
            values allow more convergence towards the true distribtion before draws
            are taken
        long-hint: |
            Number of passes (withdarawal and reassignment of every sequence in the
            sink) that will be made before a sample (draw) will be taken. Higher
            values allow more convergence towards the true distribtion before draws
            are taken
    delay:
        ui-name: |
            Delay
        short-hint: |
            Number passes between each sampling (draw) of the Markov chain.
        long-hint: |
            Number passes between each sampling (draw) of the Markov chain. Once
            the burnin passes have been made, a sample will be taken, and
            additional samples will be drawn every `delay` number of passes. This
            is also known as 'thinning'. Thinning helps reduce the impact of
            correlation between adjacent states of the Markov chain.
    st_matrix_name:
        ui-name: |
            Proportion Matrix Object Name
        short-hint : |
            Output Proportion Matrix object name
        long-hint  : |
            Output Proportion Matrix object name
description : |
    <h3>Description: </h3>
    <p>Source Tracker, first introduced by Dan Knights in a 2011 paper (Knights et al. 2011), evaluates the relative bacterial contributions of source environments to microbial sink communities from 16S rRNA bacterial genomic sequence data. Unlike Na√Øve Bayes and Random Forrest, Source Tracker uses an algorithm called Latent Dirichlet Allocation, to assign sink OTU or ASV sequences to given source environments but remains accurate when contaminants of an unknown source are introduced. In short, the software uses Gibbs sampling to randomly assign sources to each sequence before reassigning sources based on the frequency data for each OTU or ASV. To learn more about the theory behind Source Tarcker, visit this Jupyter notebook. Source Tracker has been utilized and evaluated in numerous publications (Henry et al. 2016; Newton et al. 2013; Staley et al. 2018) many of which have assessed contamination in water treatment. In these studies, researchers were able to identify and compare the proportion of microbial contamination in water treatment locations along with the proportion of bacteria from known sources.</p>
    <p>Inputs: Amplicon Matrix (.biom), Metadata Mapping Table, sink label, source label, output object name</p>
    <p>Outputs: Source per Sink Table</p>
    <p>Source per Sink Table: a table displaying the proportional contributions of source samples in sinks, can be presented with or without the standard deviation of each contribution. (.html)</p>
